net
{
	HRUNTIME_Propagate_AutoNormal = "1";
	HR_Font_Size = "-12";
	HRUNTIME_Font_Size = "-12";
	HR_Grid_GridSnap = "1";
	HRUNTIME_Propagate_AutoSum = "1";
	HR_Propagate_AutoNormal = "1";
	node_size = (100.0 40.0);
	HRUNTIME_Monitor_GraphPrecision = "100";
	HR_Grid_GridShow = "0";
	HR_Font_Name = "Arial";
	HR_Compile_ApproxEpsilon = "0.00001";
	HRUNTIME_Monitor_AutoUpdGraph = "0";
	HRUNTIME_Font_Name = "Arial";
	HRUNTIME_Font_Weight = "400";
	HR_Font_Weight = "400";
	HR_Monitor_AutoUpdGraph = "0";
	HRUNTIME_Compile_Compress = "0";
	HR_Compile_Compress = "0";
	HRUNTIME_Compile_TriangMethod = "0";
	HR_Grid_Y = "10";
	HR_Grid_X = "10";
	HR_Groups_GroupNames = "";
	HR_Compile_Approximate = "0";
	HRUNTIME_Compile_Approximate = "0";
	HR_Compile_TriangMethod = "0";
	HR_Color_DiscreteChance = "16";
	HRUNTIME_Compile_ApproxEpsilon = "0.00001";
	HR_Monitor_InitStates = "5";
	HRUNTIME_Grid_GridSnap = "1";
	HR_Color_ContinuosChance = "48";
	HRUNTIME_Propagate_Auto = "0";
	HR_Groups_GroupColors = "";
	HR_Monitor_OpenGraph = "0";
	HRUNTIME_Grid_GridShow = "0";
	HR_Monitor_InitSD = "2";
	HR_Groups_UserGroupsNo = "0";
	HR_Color_Decision = "17";
	HRUNTIME_Monitor_InitStates = "5";
	HRUNTIME_Grid_Y = "10";
	HRUNTIME_Grid_X = "10";
	HR_Propagate_Auto = "0";
	HR_Monitor_GraphPrecision = "100";
	HRUNTIME_Font_Italic = "0";
	HRUNTIME_Monitor_OpenGraph = "0";
	HR_Font_Italic = "0";
	HR_Propagate_AutoSum = "1";
	HR_Color_Utility = "36";
}

node A
{
	states = ("Present" "Absent");
	ID = "A";
	position = (131 0);
	label = "A:Metastatic Cancer";
}

node C
{
	states = ("Present" "Absent");
	ID = "C";
	position = (255 128);
	label = "C:  Brain Tumor";
}

node B
{
	states = ("Increased" "Not increased");
	ID = "B";
	position = (0 128);
	label = "B: Serum Calcium";
}

node E
{
	states = ("Present" "Absent");
	ID = "E";
	position = (414 266);
	label = "E: Severe Headaches";
}

node D
{
	states = ("Present" "Absent");
	ID = "D";
	position = (147 256);
	label = "D: Coma";
}

potential ( A | C D E )
{
	data = ((Decimal('0.53832622842649318359') Decimal('0.46167377157350681641')) (Decimal('0.53832622842649318360') Decimal('0.46167377157350681641')) (Decimal('0.48607039584480540764') Decimal('0.51392960415519459236')) (Decimal('0.48607039584480540765') Decimal('0.51392960415519459235')) (Decimal('0.53604462177023507502') Decimal('0.46395537822976492499')) (Decimal('0.53604462177023507502') Decimal('0.46395537822976492498')) (Decimal('0.091233910098023666350') Decimal('0.90876608990197633365')) (Decimal('0.091233910098023666352') Decimal('0.90876608990197633365')));
}

potential ( C |  )
{
	data = ((Decimal('0.085253860418590000000') Decimal('0.91474613958141000001')));
}

potential ( B | C D E A )
{
	data = ((Decimal('0.74385052891588932317') Decimal('0.25614947108411067683')) (Decimal('0.13913322710948677277') Decimal('0.86086677289051322722')) (Decimal('0.74385052891588932317') Decimal('0.25614947108411067683')) (Decimal('0.13913322710948677277') Decimal('0.86086677289051322722')) (Decimal('0.67047907192283521459') Decimal('0.32952092807716478541')) (Decimal('0.10172216779138215454') Decimal('0.89827783220861784546')) (Decimal('0.67047907192283521458') Decimal('0.32952092807716478542')) (Decimal('0.10172216779138215454') Decimal('0.89827783220861784548')) (Decimal('0.99491561857142402940') Decimal('0.0050843814285759705993')) (Decimal('0.91589978040324911289') Decimal('0.084100219596750887113')) (Decimal('0.99491561857142402939') Decimal('0.0050843814285759705995')) (Decimal('0.91589978040324911290') Decimal('0.084100219596750887111')) (Decimal('0.32216678027642243250') Decimal('0.67783321972357756750')) (Decimal('0.025770444441406308986') Decimal('0.97422955555859369101')) (Decimal('0.32216678027642243249') Decimal('0.67783321972357756752')) (Decimal('0.025770444441406308986') Decimal('0.97422955555859369102')));
}

potential ( E | C D )
{
	data = ((Decimal('0.79632310000000000000') Decimal('0.20367690000000000000')) (Decimal('0.79632310000000000000') Decimal('0.20367689999999999999')) (Decimal('0.60173719999999999997') Decimal('0.39826279999999999999')) (Decimal('0.60173720000000000001') Decimal('0.39826279999999999999')));
}

potential ( D | C )
{
	data = ((Decimal('0.75697326369771951426') Decimal('0.24302673630228048574')) (Decimal('0.20493243860483563230') Decimal('0.79506756139516436770')));
}

